{"version":3,"sources":["components/navbar.component.js","components/exercises-list.component.js","components/edit-exercise.component.js","components/create-exercise.component.js","components/create-user.component.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Component","Exercise","props","exercise","username","description","duration","date","substring","_id","href","onClick","deleteExercise","ExercisesList","bind","state","exercises","Axios","get","then","response","setState","data","catch","error","console","log","id","delete","res","this","filter","el","map","currentexercise","key","exerciseList","EditExercise","onChangeUsername","onChangeDescription","onChangeDuration","onChangeDate","onSubmit","Date","users","axios","match","params","length","user","e","target","value","preventDefault","post","window","location","ref","required","onChange","type","selected","CreateExercise","CreateUser","App","path","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"iPAGqBA,E,uKAEb,OACA,yBAAKC,UAAU,+CACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,gBAAvB,qBACA,yBAAKA,UAAU,4BACX,wBAAIA,UAAU,sBACV,wBAAIA,UAAU,eACV,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,YAAvB,cAEJ,wBAAIA,UAAU,eACV,kBAAC,IAAD,CAAMC,GAAG,UAAUD,UAAU,YAA7B,wBAEJ,wBAAIA,UAAU,eACV,kBAAC,IAAD,CAAMC,GAAG,QAAQD,UAAU,YAA3B,uB,GAdYE,a,wBCC9BC,EAAW,SAAAC,GAAK,OAClB,4BACI,4BAAKA,EAAMC,SAASC,UACpB,4BAAKF,EAAMC,SAASE,aACpB,4BAAKH,EAAMC,SAASG,UACpB,4BAAKJ,EAAMC,SAASI,KAAKC,UAAU,EAAE,KACrC,4BACI,kBAAC,IAAD,CAAMT,GAAI,SAAWG,EAAMC,SAASM,KAApC,QADJ,MAC2D,uBAAGC,KAAK,IAAIC,QAAS,WAAOT,EAAMU,eAAeV,EAAMC,SAASM,OAAhE,aAO9CI,E,kDACjB,WAAYX,GAAQ,IAAD,8BACf,cAAMA,IAEDU,eAAiB,EAAKA,eAAeE,KAApB,gBAEtB,EAAKC,MAAQ,CAAEC,UAAW,IALX,E,gEAQE,IAAD,OAChBC,IAAMC,IAAI,eACLC,MAAK,SAAAC,GACF,EAAKC,SAAS,CAAEL,UAAUI,EAASE,UAEtCC,OAAM,SAACC,GACJC,QAAQC,IAAIF,Q,qCAITG,GACXV,IAAMW,OAAO,cAAcD,GACtBR,MAAK,SAAAU,GAAG,OAAIJ,QAAQC,IAAIG,EAAIP,SAEjCQ,KAAKT,SAAS,CACVL,UAAWc,KAAKf,MAAMC,UAAUe,QAAO,SAAAC,GAAE,OAAIA,EAAGvB,MAAQkB,S,qCAIhD,IAAD,OACX,OAAOG,KAAKf,MAAMC,UAAUiB,KAAI,SAAAC,GAC5B,OAAO,kBAAC,EAAD,CAAU/B,SAAU+B,EAAiBtB,eAAgB,EAAKA,eAAgBuB,IAAKD,EAAgBzB,W,+BAM1G,OACI,6BACG,gDACA,2BAAOX,UAAU,SACb,2BAAOA,UAAU,eACd,4BACA,wCACC,2CACA,wCACA,oCACA,yCAGJ,+BACMgC,KAAKM,sB,GAlDapC,a,iBCbtBqC,G,wDAElB,WAAYnC,GAAQ,IAAD,8BAClB,cAAMA,IAEDoC,iBAAmB,EAAKA,iBAAiBxB,KAAtB,gBACxB,EAAKyB,oBAAsB,EAAKA,oBAAoBzB,KAAzB,gBAC3B,EAAK0B,iBAAmB,EAAKA,iBAAiB1B,KAAtB,gBACxB,EAAK2B,aAAe,EAAKA,aAAa3B,KAAlB,gBACpB,EAAK4B,SAAW,EAAKA,SAAS5B,KAAd,gBAEhB,EAAKC,MAAQ,CACTX,SAAU,GACVC,YAAY,GACZC,SAAS,GACTC,KAAM,IAAIoC,KACVC,MAAO,IAdO,E,gEAkBE,IAAD,OAChBC,IAAM3B,IAAI,cAAeY,KAAK5B,MAAM4C,MAAMC,OAAOpB,IAC/CR,MAAK,SAAAC,GACF,EAAKC,SAAS,CACVjB,SAAUgB,EAASE,KAAKlB,SACxBC,YAAae,EAASE,KAAKjB,YAC3BC,SAAUc,EAASE,KAAKhB,SACxBC,KAAM,IAAIoC,KAAKvB,EAASE,KAAKf,WAIpCgB,OAAM,SAAUC,GACbC,QAAQC,IAAIF,MAGhBqB,IAAM3B,IAAI,WACLC,MAAK,SAAAC,GACEA,EAASE,KAAK0B,OAAS,GACvB,EAAK3B,SAAS,CACVuB,MAAOxB,EAASE,KAAKW,KAAI,SAAAgB,GAAI,OAAIA,EAAK7C,mB,uCAQ1C8C,GACZpB,KAAKT,SAAS,CACVjB,SAAU8C,EAAEC,OAAOC,U,0CAIRF,GACfpB,KAAKT,SAAS,CACVhB,YAAa6C,EAAEC,OAAOC,U,uCAIbF,GACbpB,KAAKT,SAAS,CACVf,SAAU4C,EAAEC,OAAOC,U,mCAGf7C,GACRuB,KAAKT,SAAS,CACVd,KAAMA,M,+BAIL2C,GACLA,EAAEG,iBAEF,IAAMlD,EAAW,CACbC,SAAW0B,KAAKf,MAAMX,SACtBC,YAAcyB,KAAKf,MAAMV,YACzBC,SAAWwB,KAAKf,MAAMT,SACtBC,KAAOuB,KAAKf,MAAMR,MAItBkB,QAAQC,IAAIvB,GACZ0C,IAAMS,KAAK,qBAAqBxB,KAAK5B,MAAM4C,MAAMC,OAAOpB,GAAIxB,GACvDgB,MAAK,SAAAU,GAAG,OAAGJ,QAAQC,IAAIG,EAAIP,SAGhCiC,OAAOC,SAAS,M,+BAIhB,OACI,6BACI,kDACA,0BAAMd,SAAUZ,KAAKY,UACjB,yBAAK5C,UAAU,cACX,6CACA,4BAAQ2D,IAAI,YACRC,UAAQ,EACR5D,UAAU,eACVsD,MAAOtB,KAAKf,MAAMX,SAClBuD,SAAU7B,KAAKQ,kBAEPR,KAAKf,MAAM6B,MAAMX,KAAI,SAASgB,GAC1B,OAAO,4BACPd,IAAKc,EACLG,MAAOH,GAAOA,QAO9B,yBAAKnD,UAAU,cACX,gDACA,2BAAO8D,KAAK,OACRF,UAAQ,EACR5D,UAAU,eACVsD,MAAOtB,KAAKf,MAAMV,YAClBsD,SAAU7B,KAAKS,uBAIvB,yBAAKzC,UAAU,cACX,0DACA,2BACI8D,KAAK,OACL9D,UAAU,eACVsD,MAAOtB,KAAKf,MAAMT,SAClBqD,SAAU7B,KAAKU,oBAGvB,yBAAK1C,UAAU,cACX,yCACA,6BACI,kBAAC,IAAD,CACI+D,SAAU/B,KAAKf,MAAMR,KACrBoD,SAAU7B,KAAKW,iBAK3B,yBAAK3C,UAAU,cACX,2BAAO8D,KAAK,SAASR,MAAM,oBAAoBtD,UAAU,2B,GA9I3CE,cCArB8D,E,kDAElB,WAAY5D,GAAQ,IAAD,8BAClB,cAAMA,IAEDoC,iBAAmB,EAAKA,iBAAiBxB,KAAtB,gBACxB,EAAKyB,oBAAsB,EAAKA,oBAAoBzB,KAAzB,gBAC3B,EAAK0B,iBAAmB,EAAKA,iBAAiB1B,KAAtB,gBACxB,EAAK2B,aAAe,EAAKA,aAAa3B,KAAlB,gBACpB,EAAK4B,SAAW,EAAKA,SAAS5B,KAAd,gBAEhB,EAAKC,MAAQ,CACTX,SAAU,GACVC,YAAY,GACZC,SAAS,GACTC,KAAM,IAAIoC,KACVC,MAAO,IAdO,E,gEAkBE,IAAD,OAChBC,IAAM3B,IAAI,WACRC,MAAK,SAAAC,GACCA,EAASE,KAAK0B,OAAS,GACtB,EAAK3B,SAAS,CACVuB,MAAOxB,EAASE,KAAKW,KAAI,SAAAgB,GAAI,OAAIA,EAAK7C,YACtCA,SAAUgB,EAASE,KAAK,GAAGlB,gB,uCAM3B8C,GACZpB,KAAKT,SAAS,CACVjB,SAAU8C,EAAEC,OAAOC,U,0CAIRF,GACfpB,KAAKT,SAAS,CACVhB,YAAa6C,EAAEC,OAAOC,U,uCAIbF,GACbpB,KAAKT,SAAS,CACVf,SAAU4C,EAAEC,OAAOC,U,mCAGf7C,GACRuB,KAAKT,SAAS,CACVd,KAAMA,M,+BAIL2C,GACLA,EAAEG,iBAEF,IAAMlD,EAAW,CACbC,SAAW0B,KAAKf,MAAMX,SACtBC,YAAcyB,KAAKf,MAAMV,YACzBC,SAAWwB,KAAKf,MAAMT,SACtBC,KAAOuB,KAAKf,MAAMR,MAItBkB,QAAQC,IAAIvB,GACZ0C,IAAMS,KAAK,iBAAkBnD,GACxBgB,MAAK,SAAAU,GAAG,OAAGJ,QAAQC,IAAIG,EAAIP,SAGhCiC,OAAOC,SAAS,M,+BAIhB,OACI,6BACI,wDACA,0BAAMd,SAAUZ,KAAKY,UACjB,yBAAK5C,UAAU,cACX,6CACA,4BAAQ2D,IAAI,YACRC,UAAQ,EACR5D,UAAU,eACVsD,MAAOtB,KAAKf,MAAMX,SAClBuD,SAAU7B,KAAKQ,kBAEPR,KAAKf,MAAM6B,MAAMX,KAAI,SAASgB,GAC1B,OAAO,4BACPd,IAAKc,EACLG,MAAOH,GAAOA,QAO9B,yBAAKnD,UAAU,cACX,gDACA,2BAAO8D,KAAK,OACRF,UAAQ,EACR5D,UAAU,eACVsD,MAAOtB,KAAKf,MAAMV,YAClBsD,SAAU7B,KAAKS,uBAIvB,yBAAKzC,UAAU,cACX,0DACA,2BACI8D,KAAK,OACL9D,UAAU,eACVsD,MAAOtB,KAAKf,MAAMT,SAClBqD,SAAU7B,KAAKU,oBAGvB,yBAAK1C,UAAU,cACX,yCACA,6BACI,kBAAC,IAAD,CACI+D,SAAU/B,KAAKf,MAAMR,KACrBoD,SAAU7B,KAAKW,iBAK3B,yBAAK3C,UAAU,cACX,2BAAO8D,KAAK,SAASR,MAAM,sBAAsBtD,UAAU,2B,GA/H3CE,aCFvB+D,E,kDAEjB,WAAY7D,GAAQ,IAAD,8BACf,cAAMA,IAEDoC,iBAAmB,EAAKA,iBAAiBxB,KAAtB,gBACxB,EAAK4B,SAAW,EAAKA,SAAS5B,KAAd,gBAEhB,EAAKC,MAAQ,CACTX,SAAU,IAPC,E,6DAWF8C,GACbpB,KAAKT,SAAS,CACVjB,SAAU8C,EAAEC,OAAOC,U,+BAKlBF,GACLA,EAAEG,iBAEF,IAAMJ,EAAO,CACT7C,SAAW0B,KAAKf,MAAMX,UAG1BqB,QAAQC,IAAIuB,GAEZJ,IAAMS,KAAK,aAAcL,GACpB9B,MAAK,SAAAU,GAAG,OAAGJ,QAAQC,IAAIG,EAAIP,SAEhCQ,KAAKT,SAAS,CACVjB,SAAS,O,+BAMb,OACI,6BACA,+CACA,0BAAMsC,SAAUZ,KAAKY,UACjB,yBAAK5C,UAAU,cACX,6CACA,2BAAO8D,KAAK,OACRF,UAAQ,EACR5D,UAAU,eACVsD,MAAOtB,KAAKf,MAAMX,SAClBuD,SAAU7B,KAAKQ,oBAInB,yBAAKxC,UAAU,cACX,2BAAO8D,KAAK,SAASR,MAAM,cAActD,UAAU,2B,GAtDnCE,aCwBzBgE,MAhBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKlE,UAAU,aACf,kBAAC,EAAD,MACA,6BACA,kBAAC,IAAD,CAAOmE,KAAK,IAAIC,OAAK,EAACC,UAActD,IACpC,kBAAC,IAAD,CAAOoD,KAAK,YAAYE,UAAc9B,IACtC,kBAAC,IAAD,CAAO4B,KAAK,UAAUE,UAAcL,IACpC,kBAAC,IAAD,CAAOG,KAAK,QAAQE,UAAcJ,OCRpBK,QACW,cAA7Bb,OAAOC,SAASa,UAEe,UAA7Bd,OAAOC,SAASa,UAEhBd,OAAOC,SAASa,SAASvB,MACvB,2DCZNwB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1D,MAAK,SAAA2D,GACJA,EAAaC,gBAEdxD,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMwD,a","file":"static/js/main.62a704d7.chunk.js","sourcesContent":["import React, {Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default class Navbar extends Component {\n    render() {\n        return(\n        <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\n            <Link to=\"/\" className=\"navbar-brand\">Excercise Tracker</Link>\n            <div className=\"collapse navbar-collapse\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"navbar-item\">\n                        <Link to=\"/\" className=\"nav-link\">Exercises</Link>\n                    </li>\n                    <li className=\"navbar-item\">\n                        <Link to=\"/create\" className=\"nav-link\">Create exercise log</Link>\n                    </li>\n                    <li className=\"navbar-item\">\n                        <Link to=\"/user\" className=\"nav-link\">Create user</Link>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    );\n    }\n}","import React, { Component } from 'react'\nimport Axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nconst Exercise = props => (\n    <tr>\n        <td>{props.exercise.username }</td>\n        <td>{props.exercise.description }</td>\n        <td>{props.exercise.duration }</td>\n        <td>{props.exercise.date.substring(0,10) }</td>\n        <td>\n            <Link to={\"/edit/\" + props.exercise._id}>edit</Link> | <a href=\"#\" onClick={() => {props.deleteExercise(props.exercise._id) }}>Delete</a>\n        </td>\n\n    </tr>\n)\n\n\nexport default class ExercisesList extends Component {\n    constructor(props) {\n        super(props)\n\n        this.deleteExercise = this.deleteExercise.bind(this)\n\n        this.state = { exercises: []}\n    }\n\n    componentDidMount() {\n        Axios.get(\"/exercises/\")\n            .then(response => {\n                this.setState({ exercises:response.data })\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    }\n\n    deleteExercise(id) {\n        Axios.delete('/exercises/'+id)\n            .then(res => console.log(res.data))\n            \n        this.setState({\n            exercises: this.state.exercises.filter(el => el._id !== id)\n        })\n    }\n\n    exerciseList() {\n        return this.state.exercises.map(currentexercise=> {\n            return <Exercise exercise={currentexercise} deleteExercise={this.deleteExercise} key={currentexercise._id} />\n            \n        })\n    }\n\n    render() {\n        return (\n            <div>\n               <h3>Logged Exercises</h3>\n               <table className=\"table\">\n                   <thead className=\"thead-light\">\n                      <tr>\n                      <th>Username</th>\n                       <th>Description</th>\n                       <th>Duration</th>\n                       <th>Date</th>\n                       <th>Actions</th>\n                      </tr>\n                   </thead>\n                   <tbody>\n                       { this.exerciseList() }\n                   </tbody>\n               </table>\n            </div>\n        )\n    }\n}\n\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport DatePicker from \"react-datepicker\"\nimport \"react-datepicker/dist/react-datepicker.css\"\n\nexport default class EditExercise extends Component {\n\n   constructor(props) {\n    super(props)\n\n    this.onChangeUsername = this.onChangeUsername.bind(this)\n    this.onChangeDescription = this.onChangeDescription.bind(this)\n    this.onChangeDuration = this.onChangeDuration.bind(this)\n    this.onChangeDate = this.onChangeDate.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n\n    this.state = {\n        username :'',\n        description:'',\n        duration:'',\n        date: new Date(),\n        users: []\n    }\n   }\n\n   componentDidMount() {\n       axios.get('/exercises/'+ this.props.match.params.id)\n        .then(response => {\n            this.setState({\n                username: response.data.username,\n                description: response.data.description,\n                duration: response.data.duration,\n                date: new Date(response.data.date),\n\n            })\n        })\n        .catch(function (error) {\n            console.log(error)\n        })\n\n        axios.get('/users/')\n            .then(response => {\n                if (response.data.length > 0) {\n                    this.setState({\n                        users: response.data.map(user => user.username),\n                    })\n                } \n            })\n\n\n   }\n\n   onChangeUsername(e) {\n        this.setState({\n            username: e.target.value\n        })\n   }\n\n   onChangeDescription(e) {\n        this.setState({\n            description: e.target.value\n        })\n    }\n\n    onChangeDuration(e) {\n        this.setState({\n            duration: e.target.value\n        })\n   }\n   onChangeDate(date) {\n        this.setState({\n            date: date\n        })\n    }\n\n    onSubmit(e) {\n        e.preventDefault()\n\n        const exercise = {\n            username : this.state.username,\n            description : this.state.description,\n            duration : this.state.duration,\n            date : this.state.date,\n\n        }\n\n        console.log(exercise)\n        axios.post('/exercises/update/'+this.props.match.params.id, exercise)\n            .then(res=> console.log(res.data))\n\n\n        window.location='/'\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Edit Exercise Log </h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Username: </label>\n                        <select ref=\"userInput\"\n                            required\n                            className=\"form-control\"\n                            value={this.state.username}\n                            onChange={this.onChangeUsername}>\n                                {\n                                    this.state.users.map(function(user){\n                                        return < option\n                                        key={user}\n                                        value={user}>{user}\n                                        </option>\n\n                                    })\n                                }\n                            </select>\n                    </div>\n                        <div className=\"form-group\">\n                            <label>Description: </label>\n                            <input type=\"text\"\n                                required\n                                className=\"form-control\"\n                                value={this.state.description}\n                                onChange={this.onChangeDescription}\n                                />\n\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Duration (in Minutes): </label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.duration}\n                                onChange={this.onChangeDuration}\n                                />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Date: </label>\n                            <div>\n                                <DatePicker\n                                    selected={this.state.date}\n                                    onChange={this.onChangeDate}\n                                    />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input type=\"submit\" value=\"Save Exercise log\" className=\"btn btn-primary\"/>\n                        </div>\n\n                </form>\n            </div>\n        )\n    }\n}\n\n// export default CreateExercises\n ","import React, { Component } from 'react'\nimport axios from 'axios'\nimport DatePicker from \"react-datepicker\"\nimport \"react-datepicker/dist/react-datepicker.css\"\n\nexport default class CreateExercise extends Component {\n\n   constructor(props) {\n    super(props)\n\n    this.onChangeUsername = this.onChangeUsername.bind(this)\n    this.onChangeDescription = this.onChangeDescription.bind(this)\n    this.onChangeDuration = this.onChangeDuration.bind(this)\n    this.onChangeDate = this.onChangeDate.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n\n    this.state = {\n        username :'',\n        description:'',\n        duration:'',\n        date: new Date(),\n        users: []\n    }\n   }\n\n   componentDidMount() {\n       axios.get('/users/')\n        .then(response => {\n            if(response.data.length > 0) {\n                this.setState({\n                    users: response.data.map(user => user.username),\n                    username: response.data[0].username\n                })\n            }\n        })\n   }\n\n   onChangeUsername(e) {\n        this.setState({\n            username: e.target.value\n        })\n   }\n\n   onChangeDescription(e) {\n        this.setState({\n            description: e.target.value\n        })\n    }\n\n    onChangeDuration(e) {\n        this.setState({\n            duration: e.target.value\n        })\n   }\n   onChangeDate(date) {\n        this.setState({\n            date: date\n        })\n    }\n\n    onSubmit(e) {\n        e.preventDefault()\n\n        const exercise = {\n            username : this.state.username,\n            description : this.state.description,\n            duration : this.state.duration,\n            date : this.state.date,\n\n        }\n\n        console.log(exercise)\n        axios.post('/exercises/add', exercise)\n            .then(res=> console.log(res.data))\n\n\n        window.location='/'\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Create New Exercise Log </h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Username: </label>\n                        <select ref=\"userInput\"\n                            required\n                            className=\"form-control\"\n                            value={this.state.username}\n                            onChange={this.onChangeUsername}>\n                                {\n                                    this.state.users.map(function(user){\n                                        return < option\n                                        key={user}\n                                        value={user}>{user}\n                                        </option>\n\n                                    })\n                                }\n                            </select>\n                    </div>\n                        <div className=\"form-group\">\n                            <label>Description: </label>\n                            <input type=\"text\"\n                                required\n                                className=\"form-control\"\n                                value={this.state.description}\n                                onChange={this.onChangeDescription}\n                                />\n\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Duration (in Minutes): </label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.duration}\n                                onChange={this.onChangeDuration}\n                                />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Date: </label>\n                            <div>\n                                <DatePicker\n                                    selected={this.state.date}\n                                    onChange={this.onChangeDate}\n                                    />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input type=\"submit\" value=\"Create Exercise log\" className=\"btn btn-primary\"/>\n                        </div>\n\n                </form>\n            </div>\n        )\n    }\n}\n\n// export default CreateExercises\n ","import React, { Component } from 'react'\nimport axios from 'axios'\n\nexport default class CreateUser extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.onChangeUsername = this.onChangeUsername.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n\n        this.state = {\n            username :'',\n        }\n    }\n\n    onChangeUsername(e) {\n        this.setState({\n            username: e.target.value\n        })\n    }\n\n\n    onSubmit(e) {\n        e.preventDefault()\n\n        const user = {\n            username : this.state.username,\n        }\n\n        console.log(user)\n\n        axios.post('/users/add', user)\n            .then(res=> console.log(res.data))\n\n        this.setState({\n            username:''\n        })\n        // window.location='/'\n    }\n\n    render() {\n        return (\n            <div>\n            <h3>Create New User</h3>\n            <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                    <label>Username: </label>\n                    <input type=\"text\"\n                        required\n                        className=\"form-control\"\n                        value={this.state.username}\n                        onChange={this.onChangeUsername}\n                        />\n                </div>\n\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Create User\" className=\"btn btn-primary\"/>\n                    </div>\n\n            </form>\n        </div>\n        )\n    }\n}\n\n// export default CreateUser\n\n\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nimport Navbar from \"./components/navbar.component\"\nimport ExercisesList from \"./components/exercises-list.component\"\nimport EditExercise from \"./components/edit-exercise.component\"\nimport CreateExercise from \"./components/create-exercise.component\"\nimport CreateUser from \"./components/create-user.component\"\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n      <Navbar />\n      <br/>\n      <Route path=\"/\" exact component = { ExercisesList } />\n      <Route path=\"/edit/:id\" component = { EditExercise } />\n      <Route path=\"/create\" component = { CreateExercise } />\n      <Route path=\"/user\" component = { CreateUser } />\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}